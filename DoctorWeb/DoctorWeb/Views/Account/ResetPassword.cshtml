@model DoctorWeb.Models.ResetPasswordViewModel
@{
    ViewBag.Title = "Reset password";
    Layout = null;
}

<link href="~/Content/Login screen/Login_Register.css" rel="stylesheet" />
<link href="~/Content/Login screen/mybootstrap.min.css" rel="stylesheet" />
<link href="~/Content/Login screen/font-awesome.min.css" rel="stylesheet" />
<link href="~/Content/Login screen/ionicons.min.css" rel="stylesheet" />
<link href="~/Content/Login screen/AdminLTE.min.css" rel="stylesheet" />
<link href="~/Content/Login screen/blue.css" rel="stylesheet" />
<link href="~/Content/Login screen/googleapi.css" rel="stylesheet" />
<link href="~/Content/Login screen/glyphicons.less" rel="stylesheet" />
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Content/Login screen/jquery.min.js"></script>
<script src="~/Content/Login screen/icheck.min.js"></script>
<body class="hold-transition register-page">
    <div class="register-box">
        <div class="register-logo">
            <img src="~/Content/Images/logo.png" />
        </div>
        <div class="register-box-body">
            <p class="login-box-msg">Reset your Password</p>

            @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Code)

                <div class="form-group has-feedback">
                    @*<input type="email" class="form-control" placeholder="Email">*@
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", type = "email", placeholder = "Email" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
                <div class="form-group has-feedback">
                    @*<input type="password" class="form-control" placeholder="Password">*@
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", type = "password", placeholder = "Password" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>
                <div class="form-group has-feedback">
                    @*<input type="password" class="form-control" placeholder="Retype password">*@
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", type = "password", placeholder = "Confirm Password" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
                <div class="row">
                    <div class="col-xs-4">
                        <input type="submit" class="btn btn-primary btn-block btn-flat" value="Reset" />
                    </div>
                    <!-- /.col -->
                </div>
                @Html.ValidationSummary("", new { @class = "text-danger" })
            }
        </div>
        <!-- /.form-box -->
    </div>
    <!-- /.register-box -->
</body>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
