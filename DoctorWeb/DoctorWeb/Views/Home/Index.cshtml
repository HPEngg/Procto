@model DoctorWeb.Models.CustomModels.PatientHome

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Patient</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div id="msform">
        <div class="form_fieldset_div">
            <!-- fieldsets -- one-->
            <fieldset class="left_part_form1">
                <div class="form-horizontal mdform my-mdform">
                    @*<h4>Patient</h4>*@
                    <h2 class="fs-title">Patient Details</h2>
                    <label style='width:100%;text-align:left; color:blue;display:block;'>Patient No. 11</label>
                    <div class="mdform my-mdform">
                        @*<hr />*@
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="menu">
                            @Html.LabelFor(model => model.Patient.Status, htmlAttributes: new { @class = "menu_label" })
                            <div class="roundedOne">
                                @Html.RadioButtonFor(model => model.Patient.Status, DoctorWeb.Models.Enums.PatientStatus.Green, new { @checked = true, @class = "roundedOne", @style = "margin-top:0px;" })
                                <label for="roundedOne"></label>
                            </div>

                            <div class="red">
                                @Html.RadioButtonFor(model => model.Patient.Status, DoctorWeb.Models.Enums.PatientStatus.Red)
                                <label for="red"></label>
                            </div>
                            <div class="yellow">
                                @Html.RadioButtonFor(model => model.Patient.Status, DoctorWeb.Models.Enums.PatientStatus.Yellow)
                                @*@Html.EnumDropDownListFor(model => model.Patient.StatusColor, htmlAttributes: new { @class = "form-control" })*@
                                @Html.ValidationMessageFor(model => model.Patient.Status, "", new { @class = "text-danger" })
                                <label for="yellow"></label>
                            </div>
                        </div>
                        @*<div class="form-group">
                                @Html.LabelFor(model => model.Patient.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EnumDropDownListFor(model => model.Patient.Status, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Patient.Status, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        <div class="form-group">
                            @*@Html.LabelFor(model => model.Patient.Name, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            @*<div class="col-md-10">*@
                            @Html.EditorFor(model => model.Patient.Name, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.Patient.Name) } })
                            @Html.ValidationMessageFor(model => model.Patient.Name, "", new { @class = "text-danger" })
                            @*</div>*@
                        </div>

                        <div class="form-group">
                            @*@Html.LabelFor(model => model.Patient.Age, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            @*<div class="col-md-10">*@
                            @Html.EditorFor(model => model.Patient.Age, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.Patient.Age) } })
                            @Html.ValidationMessageFor(model => model.Patient.Age, "", new { @class = "text-danger" })

                            @Html.EnumDropDownListFor(model => model.Patient.Gender, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Patient.Gender, "", new { @class = "text-danger" })
                            @*</div>*@
                        </div>

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.Patient.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EnumDropDownListFor(model => model.Patient.Gender, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Patient.Gender, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        <div class="form-group">
                            @*@Html.LabelFor(model => model.Patient.Address, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            @*<div class="col-md-10">*@
                            @Html.EditorFor(model => model.Patient.Address, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.Patient.Address) } })
                            @Html.ValidationMessageFor(model => model.Patient.Address, "", new { @class = "text-danger" })
                            @*</div>*@
                        </div>

                        <div class="form-group">
                            @*@Html.LabelFor(model => model.Patient.ReferredBy, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            @*<div class="col-md-10">*@
                            @Html.EnumDropDownListFor(model => model.Patient.ReferredBy, "--Referred By--", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Patient.ReferredBy, "", new { @class = "text-danger" })
                            @*</div>*@
                        </div>

                        <div class="form-group">
                            @*@Html.LabelFor(model => model.Patient.DoctorID, "DoctorID", htmlAttributes: new { @class = "control-label col-md-2" })*@
                            @*<div class="col-md-10">*@
                            @Html.DropDownList("DoctorID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Patient.DoctorID, "", new { @class = "text-danger" })
                            @*</div>*@
                        </div>

                        <div class="form-group">
                            @*@Html.LabelFor(model => model.Patient.DepartmentID, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            @*<div class="col-md-10">*@
                            @Html.EnumDropDownListFor(model => model.Patient.DepartmentID, "--Department--", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Patient.DepartmentID, "", new { @class = "text-danger" })
                            @*</div>*@
                        </div>

                        <div class="mystep2all">
                            @Html.LabelFor(model => model.Patient.DOB, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-left:0px;" })
                            @*<div class="col-md-10">*@
                                @Html.EditorFor(model => model.Patient.DOB, new { htmlAttributes = new { @class = "my-input", style = "min-width:75%;", placeholder = "DD/MM/YYYY" } })
                                @Html.ValidationMessageFor(model => model.Patient.DOB, "", new { @class = "text-danger" })
                            @*</div>*@
                        </div>

                        <div class="form-group">
                            @*@Html.LabelFor(model => model.Patient.Contact, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            @*<div class="col-md-10">*@
                            @Html.EditorFor(model => model.Patient.Contact, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.Patient.Contact) } })
                            @Html.ValidationMessageFor(model => model.Patient.Contact, "", new { @class = "text-danger" })
                            @*</div>*@
                        </div>

                        <div class="form-group">
                            @*@Html.LabelFor(model => model.Patient.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">*@
                            @Html.EditorFor(model => model.Patient.Email, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.Patient.Email) } })
                            @Html.ValidationMessageFor(model => model.Patient.Email, "", new { @class = "text-danger" })
                            @*</div>*@
                        </div>

                        <div class="form-group">
                            @*@Html.LabelFor(model => model.Patient.Occupation, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">*@
                            @Html.EditorFor(model => model.Patient.Occupation, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.Patient.Occupation) } })
                            @Html.ValidationMessageFor(model => model.Patient.Occupation, "", new { @class = "text-danger" })
                            @*</div>*@
                        </div>

                        <div class="form-group">
                            @*@Html.LabelFor(model => model.Patient.Habit, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">*@
                            @Html.EnumDropDownListFor(model => model.Patient.Habit, "--Habit--", new { multiple = "multiple" })
                            @Html.ValidationMessageFor(model => model.Patient.Habit, "", new { @class = "text-danger" })
                            @*</div>*@
                        </div>

                        <div class="form-group">
                            @*@Html.LabelFor(model => model.Patient.FoodPreference, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">*@
                            @Html.EnumDropDownListFor(model => model.Patient.FoodPreference, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Patient.FoodPreference, "", new { @class = "text-danger" })
                            @*</div>*@
                        </div>

                        <div class="form-group">
                            @*@Html.LabelFor(model => model.Patient.RemindMeAbout, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">*@
                            @Html.EditorFor(model => model.Patient.RemindMeAbout, new { htmlAttributes = new { @class = "form-control", placeholder = "Remind me about" } })
                            @Html.ValidationMessageFor(model => model.Patient.RemindMeAbout, "", new { @class = "text-danger" })
                            @*</div>*@
                        </div>
                    </div>
                </div>
            </fieldset>

            <fieldset class="left_part_form2 div_scrollbar">
                <h2 class="fs-title fs-title_cmplnfrm" style="color:blue;">Complain Form</h2>
                <div class="mdform my-mdform">

                    <div class="mdform my-mdform">
                        <div class="mystep2all">
                            @*@Html.LabelFor(model => model.PatientHistory.RP, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="mylabels" style="padding-top:0px;">
                                @Html.RadioButtonFor(model => model.PatientHistory.PR, "R", htmlAttributes: new { style = "width:20px;", @checked = true })R
                                @Html.RadioButtonFor(model => model.PatientHistory.PR, "P", htmlAttributes: new { style = "width:20px;" })P
                                @Html.ValidationMessageFor(model => model.PatientHistory.RP, "", new { @class = "text-danger" })
                            </div>
                            <div>
                                @Html.EditorFor(model => model.PatientHistory.KCO, new { htmlAttributes = new { @class = "my-input", style = "min-width:60%;", placeholder = "K/C/O" } })
                                @Html.ValidationMessageFor(model => model.PatientHistory.KCO, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.PatientHistory.KCO, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.PatientHistory.KCO, new { htmlAttributes = new { @class = "my-input", style = "min-width:60%;", placeholder = "K/C/O" } })
                                    @Html.ValidationMessageFor(model => model.PatientHistory.KCO, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        <div class="mystep2all">
                            @Html.LabelFor(model => model.PatientHistory.CO, htmlAttributes: new { @class = "mylabels" })
                            <div>
                                @Html.EditorFor(model => model.PatientHistory.CO, new { htmlAttributes = new { @class = "my-input", style = "min-width:60%;", placeholder = "C/O" } })
                                @Html.ValidationMessageFor(model => model.PatientHistory.CO, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="mystep2all">
                            @Html.LabelFor(model => model.PatientHistory.ComplainForm, htmlAttributes: new { @class = "mylabels" })
                            <div>
                                @Html.EditorFor(model => model.PatientHistory.ComplainForm, new { htmlAttributes = new { @class = "my-input", style = "min-width:60%;", placeholder = "Complain form" } })
                                @Html.ValidationMessageFor(model => model.PatientHistory.ComplainForm, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="mystep2all">
                            @Html.LabelFor(model => model.PatientHistory.Constipation, htmlAttributes: new { @class = "mylabels" })
                            <div class="my-rating">
                                @Html.EditorFor(model => model.PatientHistory.Constipation, new { htmlAttributes = new { @class = "form-control", @min = "1", @max = "5", @step = "1" } })
                            </div>
                            <div>
                                @Html.EditorFor(model => model.PatientHistory.ConstipationMore, new { htmlAttributes = new { @class = "my-input", placeholder = "Constipation" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.PatientHistory.Constipation, "", new { @class = "text-danger" })
                            @Html.ValidationMessageFor(model => model.PatientHistory.ConstipationMore, "", new { @class = "text-danger" })
                        </div>

                        @*<div class="mystep2all">
                                @Html.LabelFor(model => model.PatientHistory.ConstipationMore, htmlAttributes: new { @class = "mylabels" })
                                <div class="my-rating">
                                    @Html.EditorFor(model => model.PatientHistory.ConstipationMore, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PatientHistory.ConstipationMore, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        <div class="mystep2all">
                            @Html.LabelFor(model => model.PatientHistory.Pain, htmlAttributes: new { @class = "mylabels" })
                            <div class="my-rating">
                                @Html.EditorFor(model => model.PatientHistory.Pain, new { htmlAttributes = new { @class = "form-control", @min = "1", @max = "5", @step = "1" } })
                            </div>
                            <div>
                                @Html.EditorFor(model => model.PatientHistory.PainMore, new { htmlAttributes = new { @class = "my-input", placeholder = "Pain" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.PatientHistory.Pain, "", new { @class = "text-danger" })
                            @Html.ValidationMessageFor(model => model.PatientHistory.PainMore, "", new { @class = "text-danger" })
                        </div>

                        @*<div class="mystep2all">
                                @Html.LabelFor(model => model.PatientHistory.PainMore, htmlAttributes: new { @class = "mylabels" })
                                <div class="my-rating">
                                    @Html.EditorFor(model => model.PatientHistory.PainMore, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PatientHistory.PainMore, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        <div class="mystep2all">
                            @Html.LabelFor(model => model.PatientHistory.Burning, htmlAttributes: new { @class = "mylabels" })
                            <div class="my-rating">
                                @Html.EditorFor(model => model.PatientHistory.Burning, new { htmlAttributes = new { @class = "form-control", @min = "1", @max = "5", @step = "1" } })                               
                            </div>
                            <div>
                                @Html.EditorFor(model => model.PatientHistory.BurningMore, new { htmlAttributes = new { @class = "my-input", placeholder = "Burning" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.PatientHistory.Burning, "", new { @class = "text-danger" })
                            @Html.ValidationMessageFor(model => model.PatientHistory.BurningMore, "", new { @class = "text-danger" })
                        </div>

                        @*<div class="mystep2all">
                                @Html.LabelFor(model => model.PatientHistory.BurningMore, htmlAttributes: new { @class = "mylabels" })
                                <div class="my-rating">
                                    @Html.EditorFor(model => model.PatientHistory.BurningMore, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PatientHistory.BurningMore, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        <div class="mystep2all">
                            @Html.LabelFor(model => model.PatientHistory.Bleeding, htmlAttributes: new { @class = "mylabels" })
                            <div class="my-rating">
                                @Html.EditorFor(model => model.PatientHistory.Bleeding, new { htmlAttributes = new { @class = "form-control", @min = "1", @max = "5", @step = "1" } })
                            </div>
                            <div>
                                @Html.EnumDropDownListFor(model => model.PatientHistory.BleedingMore, "--Select--", htmlAttributes: new { @class = "my-input" })
                            </div>
                            @Html.ValidationMessageFor(model => model.PatientHistory.Bleeding, "", new { @class = "text-danger" })
                            @Html.ValidationMessageFor(model => model.PatientHistory.BleedingMore, "", new { @class = "text-danger" })
                        </div>

                        @*<div class="mystep2all">
                                @Html.LabelFor(model => model.PatientHistory.BleedingMore, htmlAttributes: new { @class = "mylabels" })
                                <div class="my-rating">
                                    @Html.EnumDropDownListFor(model => model.PatientHistory.BleedingMore, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.PatientHistory.BleedingMore, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        <div class="mystep2all">
                            @Html.LabelFor(model => model.PatientHistory.Itching, htmlAttributes: new { @class = "mylabels" })
                            <div class="my-rating">
                                @Html.EditorFor(model => model.PatientHistory.Itching, new { htmlAttributes = new { @class = "form-control", @min = "1", @max = "5", @step = "1" } })
                            </div>
                            <div>
                                @Html.EditorFor(model => model.PatientHistory.ItchingMore, new { htmlAttributes = new { @class = "my-input", placeholder = "Itching" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.PatientHistory.Itching, "", new { @class = "text-danger" })
                            @Html.ValidationMessageFor(model => model.PatientHistory.ItchingMore, "", new { @class = "text-danger" })
                        </div>

                        @*<div class="mystep2all">
                                @Html.LabelFor(model => model.PatientHistory.ItchingMore, htmlAttributes: new { @class = "mylabels" })
                                <div class="my-rating">
                                    @Html.EditorFor(model => model.PatientHistory.ItchingMore, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PatientHistory.ItchingMore, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        <div class="mystep2all">
                            @Html.LabelFor(model => model.PatientHistory.PusDrainage, htmlAttributes: new { @class = "mylabels" })
                            <div class="my-rating">
                                @Html.EditorFor(model => model.PatientHistory.PusDrainage, new { htmlAttributes = new { @class = "form-control", @min = "1", @max = "5", @step = "1" } })
                            </div>
                            <div>
                                @Html.EditorFor(model => model.PatientHistory.PusDrainageMore, new { htmlAttributes = new { @class = "my-input", placeholder = "Pus Drainage" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.PatientHistory.PusDrainage, "", new { @class = "text-danger" })
                            @Html.ValidationMessageFor(model => model.PatientHistory.PusDrainageMore, "", new { @class = "text-danger" })
                        </div>

                        @*<div class="mystep2all">
                                @Html.LabelFor(model => model.PatientHistory.PusDrainageMore, htmlAttributes: new { @class = "mylabels" })
                                <div class="my-rating">
                                    @Html.EditorFor(model => model.PatientHistory.PusDrainageMore, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PatientHistory.PusDrainageMore, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        <div class="mystep2all">
                            @Html.LabelFor(model => model.PatientHistory.Swelling, htmlAttributes: new { @class = "mylabels" })
                            <div class="my-rating">
                                @Html.EditorFor(model => model.PatientHistory.Swelling, new { htmlAttributes = new { @class = "form-control", @min = "1", @max = "5", @step = "1" } })
                            </div>
                            <div>
                                @Html.EditorFor(model => model.PatientHistory.SwellingMore, new { htmlAttributes = new { @class = "my-input", placeholder = "Swelling" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.PatientHistory.Swelling, "", new { @class = "text-danger" })
                            @Html.ValidationMessageFor(model => model.PatientHistory.SwellingMore, "", new { @class = "text-danger" })
                        </div>

                        @*<div class="mystep2all">
                                @Html.LabelFor(model => model.PatientHistory.SwellingMore, htmlAttributes: new { @class = "mylabels" })
                                <div class="my-rating">
                                    @Html.EditorFor(model => model.PatientHistory.SwellingMore, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PatientHistory.SwellingMore, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        <div class="mystep2all">
                            @Html.LabelFor(model => model.PatientHistory.SCO, htmlAttributes: new { @class = "mylabels" })
                            <div>
                                @Html.RadioButtonFor(model => model.PatientHistory.SCO, "1", htmlAttributes: new { style = "width:20px;", @checked = true })1<sup style="font-size:11px;">o</sup>
                                @Html.RadioButtonFor(model => model.PatientHistory.SCO, "2", htmlAttributes: new { style = "width:20px;" })2<sup style="font-size:11px;">o</sup>
                                @Html.RadioButtonFor(model => model.PatientHistory.SCO, "3", htmlAttributes: new { style = "width:20px;" })3 <sup style="font-size:11px;">o</sup>
                                @Html.RadioButtonFor(model => model.PatientHistory.SCO, "4", htmlAttributes: new { style = "width:20px;" })4<sup style="font-size:11px;">o</sup>
                                @*@Html.EditorFor(model => model.SCO, new { htmlAttributes = new { @class = "my-input", style = "min-width:60%;", placeholder = "Complain form" } })*@
                                @Html.ValidationMessageFor(model => model.PatientHistory.SCO, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="mystep2all">
                            @Html.LabelFor(model => model.PatientHistory.ACO, htmlAttributes: new { @class = "mylabels" })
                            <div>
                                @Html.EditorFor(model => model.PatientHistory.ACO, new { htmlAttributes = new { @class = "my-input", style = "min-width:60%;", placeholder = "A/C/O" } })
                                @Html.ValidationMessageFor(model => model.PatientHistory.ACO, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="mystep2all">
                            @Html.LabelFor(model => model.PatientHistory.Allergy, htmlAttributes: new { @class = "mylabels" })
                            <div>
                                @Html.EditorFor(model => model.PatientHistory.Allergy, new { htmlAttributes = new { @class = "my-input", style = "min-width:60%;", placeholder = "Allergy" } })
                                @Html.ValidationMessageFor(model => model.PatientHistory.Allergy, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="mystep2all">
                            @Html.LabelFor(model => model.PatientHistory.History, htmlAttributes: new { @class = "mylabels" })
                            <div>
                                @Html.EditorFor(model => model.PatientHistory.History, new { htmlAttributes = new { @class = "my-input", style = "min-width:60%;", placeholder = "History" } })
                                @Html.ValidationMessageFor(model => model.PatientHistory.History, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <h2 class="fs-title fs-title_cmplnfrm cmplain_title_color" style="color:blue;">Examination</h2>

                        <div class="mystep2all">

                            <div class="co_from_main">
                                @Html.LabelFor(model => model.PatientHistory.Weight, htmlAttributes: new { @class = "mylabels label_res" })
                                @Html.EditorFor(model => model.PatientHistory.Weight, new { htmlAttributes = new { @class = "my-input", style = "float:left; min-width:100%;", placeholder = "Kg" } })
                                @Html.ValidationMessageFor(model => model.PatientHistory.Weight, "", new { @class = "text-danger" })
                            </div>

                            <div class="co_from_main" style="margin-right:0px;margin-left:5px;">
                                @Html.LabelFor(model => model.PatientHistory.Height, htmlAttributes: new { @class = "mylabels label_res" })
                                @Html.EditorFor(model => model.PatientHistory.Height, new { htmlAttributes = new { @class = "my-input", style = "float:left; min-width:100%;", placeholder = "Cm" } })
                                @Html.ValidationMessageFor(model => model.PatientHistory.Height, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="mystep2all">
                            <div class="co_from_main">
                                @*@Html.LabelFor(model => model.PatientHistory.T, htmlAttributes: new { @class = "mylabels label_res" })*@
                                <label class="mylabels label_res">T-</label>
                                @Html.EditorFor(model => model.PatientHistory.T, new { htmlAttributes = new { @class = "my-input", style = "float:left; min-width:100%;", placeholder = "°F" } })
                                @Html.ValidationMessageFor(model => model.PatientHistory.T, "", new { @class = "text-danger" })
                            </div>
                            <div class="co_from_main" style="margin-right:0px;margin-left:5px;">
                                @*@Html.LabelFor(model => model.PatientHistory.PR, htmlAttributes: new { @class = "mylabels label_res" })*@
                                <label class="mylabels label_res">P/R</label>
                                @Html.EditorFor(model => model.PatientHistory.PR, new { htmlAttributes = new { @class = "my-input", style = "float:left; min-width:100%;", placeholder = "/min" } })
                                @Html.ValidationMessageFor(model => model.PatientHistory.PR, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="mystep2all">
                            @*@Html.LabelFor(model => model.PatientHistory.BP, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="co_from_main">
                                <label class="mylabels label_res">B.P.</label>
                                @Html.EditorFor(model => model.PatientHistory.BP, new { htmlAttributes = new { @class = "my-input", style = "float:left; min-width:100%;", placeholder = "mmhg" } })
                                @Html.ValidationMessageFor(model => model.PatientHistory.BP, "", new { @class = "text-danger" })
                            </div>
                            <div class="co_from_main" style="margin-right:0px;margin-left:5px;">
                                @Html.LabelFor(model => model.PatientHistory.SPO2, htmlAttributes: new { @class = "mylabels label_res" })
                                @Html.EditorFor(model => model.PatientHistory.SPO2, new { htmlAttributes = new { @class = "my-input", style = "float:left; min-width:100%;", placeholder = "%" } })
                                @Html.ValidationMessageFor(model => model.PatientHistory.SPO2, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="mystep2all">
                            @*@Html.LabelFor(model => model.PatientHistory.PRR, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <label class="mylabels" style="width:auto;">P/R</label>
                            @*<div class="col-md-10">*@
                            @Html.EditorFor(model => model.PatientHistory.PRR, new { htmlAttributes = new { @class = "my-input", style = "min-width:85%;", placeholder = "Per rectal" } })
                            @Html.ValidationMessageFor(model => model.PatientHistory.PRR, "", new { @class = "text-danger" })
                            @*</div>*@
                        </div>

                        <div class="mystep2all">
                            <div>
                                @Html.LabelFor(model => model.PatientHistory.Proctoscopy, htmlAttributes: new { @class = "mylabels label_res", style="width:auto !important; padding-right:10px; " })
                                @Html.EditorFor(model => model.PatientHistory.LightOnOff, new { htmlAttributes = new { @style = "width:auto;" } })
                                <label style="width">L</label>
                                @Html.EditorFor(model => model.PatientHistory.Proctoscopy, new { htmlAttributes = new { @class = "my-input", style = "min-width:50%;", placeholder = "Proctoscopy" } })
                                @Html.ValidationMessageFor(model => model.PatientHistory.Proctoscopy, "", new { @class = "text-danger" })
                                @Html.ValidationMessageFor(model => model.PatientHistory.LightOnOff, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="mystep2all">
                            @Html.LabelFor(model => model.PatientHistory.Other, htmlAttributes: new { @class = "mylabels" })
                            <div>
                                @Html.EditorFor(model => model.PatientHistory.Other, new { htmlAttributes = new { @class = "my-input", style = "min-width:60%;" } })
                                @Html.ValidationMessageFor(model => model.PatientHistory.Other, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="mystep2all">
                            @Html.LabelFor(model => model.PatientHistory.PatientID, "PatientID", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("PatientID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.PatientHistory.PatientID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @*@Html.HiddenFor(model => model.PatientHistory.PatientID)*@

                           <input type="submit" value="Submit Query" class="next action-button" />
                    </div>
                </div>
            </fieldset>
        </div>
    </div>
}

<div id="msform_right">
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}