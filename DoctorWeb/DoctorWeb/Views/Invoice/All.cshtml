@*@model IEnumerable<DoctorWeb.Models.Prescription>*@
@model PagedList.IPagedList<DoctorWeb.Models.Prescription>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "All";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<h2>All Invoices</h2>
@*<p>
        @Html.ActionLink("Create New", "Create")
    </p>*@
@using (Html.BeginForm()) {
    <p>
        @{
            string fromDateText = null;
            string toDateText = null;
            if (ViewBag.FromDate != null && ViewBag.ToDate != null)
            {
                ViewBag.FromDate = ViewBag.FromDate + "T00:00";
                ViewBag.ToDate = ViewBag.ToDate + "T00:00";

                fromDateText = "From Date:<input type='datetime-local' name='fromDate' id='fromDate' value='" + ViewBag.FromDate + "' />";
                toDateText = "To Date:<input type='datetime-local' name='toDate' id='toDate' value='" + ViewBag.ToDate + "' />";
            }
            else
            {
                fromDateText = "From Date:<input type='date' name='fromDate' id='fromDate' />";
                toDateText = "From Date:<input type='date' name='toDate' id='toDate' />";
            }
        }

        @Html.Raw(fromDateText)
        @Html.Raw(toDateText)

        Find by Patient's name: <input type="text" name="SearchString" id="SearchString" value="@ViewBag.CurrentFilter" />
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <tr>
        <th>Invoice No</th>
        <th>
            @*@Html.DisplayNameFor(model => model.Date)*@
            Date
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Patient.Name)*@
            Patient's Name
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Patient.Age)*@
            Age
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Patient.Gender)*@
            Sex
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Patient.Address)*@
            Address
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Patient.DepartmentID)*@
            Department
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Patient.Status)*@
            Status
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.Patient.ReferredBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Doctor.Name)
            </th>*@
        <th>
            @*@Html.DisplayNameFor(model => model.Rs)*@
            Invoiced Rs.
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.FollowDate)*@
            Follow Date
        </th>
        <th>Actions</th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Patient.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Patient.Age)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Patient.Gender)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Patient.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Patient.Department.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Patient.Status)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.Patient.ReferredBy)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Doctor.Name)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Rs)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FollowDate)
            </td>
            <td>
                @*@Html.ActionLink("Edit", "Edit", new { id = item.ID }) |*@
                @Html.ActionLink("Details", "Details", new { id = item.ID })
                @*@Html.ActionLink("Delete", "Delete", new { id = item.ID })*@
            </td>
        </tr>
    }
</table>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("All",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, fromDate = ViewBag.FromDate, toDate = ViewBag.ToDate }))
<script src="Content/Script/jquery-1.10.2.min.js"></script>
<script type="text/javascript">

  
</script>
