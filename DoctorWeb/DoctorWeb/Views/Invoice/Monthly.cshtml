@*@model IEnumerable<DoctorWeb.Models.Prescription>*@
@model PagedList.IPagedList<DoctorWeb.Models.Prescription>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Monthly";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Monthly Invoices</h2>

@*<p>
    @Html.ActionLink("Create New", "Create")
</p>*@

@using (Html.BeginForm())
{
    <p>
        Month: @Html.DropDownList("Month", Enumerable.Range(1, 12).Select(x => new SelectListItem { Text = x.ToString(), Selected = (x == DateTime.Today.Month) }), "Month", new { @onchange = "showVal()" })
        Year: @Html.DropDownList("Year", Enumerable.Range(DateTime.Now.Year - 25, 26).Select(x => new SelectListItem { Text = x.ToString(), Selected = (x == DateTime.Today.Year) }), "Year", new { @onchange = "showVal()" })
        Find by Patient's name: @Html.TextBox("SearchString")
        <input type="submit" value="Search" />
    </p>
}

@{
    int[] months = Enumerable.Range(1, 12).ToArray();
    int curMonth = DateTime.Today.Month;
}



<table class="table">
    <tr>
        <th>Invoice No</th>
        <th>
            @*@Html.DisplayNameFor(model => model.Date)*@
            Date
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Patient.Name)*@
            Patient's Name
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Patient.Age)*@
            Age
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Patient.Gender)*@
            Sex
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Patient.Address)*@
            Address
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Patient.DepartmentID)*@
            Department
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Patient.Status)*@
            Status
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.Patient.ReferredBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Doctor.Name)
            </th>*@
        <th>
            @*@Html.DisplayNameFor(model => model.Rs)*@
            Invoiced Rs.
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.FollowDate)*@
            Follow Date
        </th>
        <th>Actions</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Patient.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Patient.Age)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Patient.Gender)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Patient.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Patient.DepartmentID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Patient.Status)
            </td>
            @*<td>
        @Html.DisplayFor(modelItem => item.Patient.ReferredBy)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Doctor.Name)
    </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Rs)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FollowDate)
            </td>
            <td>
                @*@Html.ActionLink("Edit", "Edit", new { id = item.ID }) |*@
                @Html.ActionLink("Details", "Details", new { id = item.ID })
                @*@Html.ActionLink("Delete", "Delete", new { id = item.ID })*@
            </td>
        </tr>
    }

</table>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Monthly",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, Month = ViewBag.Month, Year = ViewBag.Year}))

<script src="Content/Script/jquery-1.10.2.min.js"></script>
<script type="text/javascript">

    function showVal() {
        $("#Month").find("option").eq(0).remove();
        $("#Year").find("option").eq(0).remove();
        window.location = "/Invoice/Monthly?Month=" + $("#Month").val() + "&Year=" + $("#Year").val();
    }
</script>
