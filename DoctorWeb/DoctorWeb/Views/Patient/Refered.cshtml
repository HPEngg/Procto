@model IEnumerable<DoctorWeb.Models.CustomModels.PatientRefByDoctor>

@{
    ViewBag.Title = "Refered";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Patients</h2>

@using (Html.BeginForm("Refered", "Patient"))
{
    
    <div style="float:left;">
        <label style="float:left;padding-right:5px;">ReferredBy</label>
        @Html.DropDownList("ID", (SelectList)ViewBag.Values, "Select Doctor", new { onchange = "this.form.submit();" })
    </div>
    <div style="float:right;">
        @Html.ActionLink("Export to Excel", "ExportListFromTsv", new { id = ViewBag.DoctorID })
    </div>
}
</br></br>
<table class="table table-bordered">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Age)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Sex)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Address)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Department)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Ammount)
        </th>
       
      
        @*<th>
            @Html.DisplayNameFor(model => model.Doctor.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ReferredBy)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Relative)
        </th>
       
        <th>
            @Html.DisplayNameFor(model => model.DOB)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Contact)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Occupation)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Habit)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FoodPreference)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RemindMeAbout)
        </th>*@
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Age)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Sex)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Address)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Department)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Status)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Ammount)
        </td>

        @*<td>
            @Html.DisplayFor(modelItem => item.Doctor.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ReferredBy)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Relative)
        </td>
        
        <td>
            @Html.DisplayFor(modelItem => item.DOB)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Contact)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Email)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Occupation)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Habit)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FoodPreference)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.RemindMeAbout)
        </td>*@
    </tr>
}

</table>
