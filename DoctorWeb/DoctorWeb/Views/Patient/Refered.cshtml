@model PagedList.IPagedList<DoctorWeb.Models.CustomModels.PatientRefByDoctor>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Refered";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Patients</h2>

@using (Html.BeginForm("Refered", "Patient"))
{
    string fromDateText = null;
    string toDateText = null;
    if (ViewBag.FromDate != null && ViewBag.ToDate != null)
    {
        ViewBag.FromDate = ViewBag.FromDate + "T00:00";
        ViewBag.ToDate = ViewBag.ToDate + "T00:00";

        fromDateText = "From Date <input type='datetime-local' name='fromDate' id='fromDate' value='" + ViewBag.FromDate + "' />";
        toDateText = "To Date <input type='datetime-local' name='toDate' id='toDate' value='" + ViewBag.ToDate + "' />";
    }
    else
    {
        fromDateText = "From Date <input type='date' name='fromDate' id='fromDate' />";
        toDateText = "To Date <input type='date' name='toDate' id='toDate' />";
    }
    
    <div style="float:left;">
        <span style="float:left;padding:5px 5px 0 0;">Referred by</span>
        @Html.DropDownList("ID", (SelectList)ViewBag.Values, "Select Doctor", new { onchange = "this.form.submit();" })
        <span style="padding-left:5px;">Find by Name</span>
        @Html.TextBox("SearchString")
        
    </div>
    <div style="padding:10px 0px; clear:both; display:block;float:left;">
        <span>@Html.Raw(fromDateText)</span>
        <span style="padding:0px 5px;">@Html.Raw(toDateText)</span>
        <input type="submit" value="Search"  name="search"/>
        
    </div>

    <div style="float:right;">
        <input type="submit" value="Export" name="export" class="btn btn-success" style="font-family:Calibri; text-transform:uppercase;"/>
    </div>
}
</br></br>

<table class="table table-bordered">
    <tr>
        <th>
            @*@Html.DisplayNameFor(model => model.Name)*@
            Name
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Age)*@
            Age
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Sex)*@
            Sex
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Address)*@
            Address
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Department)*@
            Department
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Status)*@
            Status
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Ammount)*@
            Amount
        </th>
       
      
        @*<th>
            @Html.DisplayNameFor(model => model.Doctor.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ReferredBy)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Relative)
        </th>
       
        <th>
            @Html.DisplayNameFor(model => model.DOB)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Contact)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Occupation)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Habit)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FoodPreference)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RemindMeAbout)
        </th>*@
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Age)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Sex)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Address)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Department)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Status)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Ammount)
        </td>

        @*<td>
            @Html.DisplayFor(modelItem => item.Doctor.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ReferredBy)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Relative)
        </td>
        
        <td>
            @Html.DisplayFor(modelItem => item.DOB)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Contact)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Email)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Occupation)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Habit)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FoodPreference)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.RemindMeAbout)
        </td>*@
    </tr>
}

</table>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Refered",
    new { id = ViewBag.DoctorID, currentFilter = ViewBag.CurrentFilter, page, fromDate = ViewBag.FromDate, toDate = ViewBag.ToDate }))